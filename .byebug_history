continue
@specialities.flatten.uniq!
@specialities.flatten
@specialities
continue
JSON.parse(request.headers["app-id"])
JSON.parse(requset.headers["app-id"])
Array(request.headers["app-id"])
request.headers["app-id"]
continue
filters[by.to_sym].call(current_user)
by
continue
filters[by.to_sym].call(current_user)
continue
filters[by.to_sym].call(current_user.id)
filters[by.to_sym]
by
continue
clients[filter.to_sym].call(current_user.id)
current_user.id
current_user
filter
continue
params[:filters][:by]
params[:filters]
continue
current_user.app_id == request.headers['app-key'].to_i
continue
current_user.app_id == request.headers['app-key'].to_i
continue
current_user.app_id
current_user.app_key
current_user
continue
request.headers['app-key']
request.headers['app-id']
continue
current_user
continue
user
next
continue
user
next
continue
current_user
continue
current_user.app_id
continue
current_user
continue
current_user
continue
heads
next
step
next
continue
b 17
b 16
next
continue
info 22
display 22
next
step
 self.tokens[client_id][:expiry]
self.tokens[client_id]['expiry']
next
token
continue
current_user
continue
current_user
continue
filters[params[:filters][:by].to_sym].call(1,1)
filters[params[:filters][:by].to_sym].call
filters[params[:filters][:by].to_sym]
filters[params[:filters][:by]]
params[:filters][:by]
filters[params[:filter][:by]]
filters
continue
results.offset
results.out_of_bounds?
results.previous_page
results.next_page.blank?
result.next_page.blank?
results.next_page
results.total_pages
results.total_entries
results = instance_variable_get("@#{self.class.name.split("::").last.gsub("Controller", '').downcase!}")
results = instance_variable_get("@#{self.class.name.split("::").last.gsub("Controller", '').downcase!}")results = instance_variable_get("@#{self.class.name.split("::").last.gsub("Controller", '').downcase!}")
continue
self.class.name.split("::").last
self.class.name.split("::")
self.class.name
self.class.name.split("::", "").last
self.class.name.split("::", "").last.gsub("Controller", '').downcase!
"@#{self.class.name.split("::", "").last.gsub("Controller", '').downcase!}"
"@#{self.class.name.split("::", "").gsub("Controller", '').downcase!}"
continue
exception.message
next
continue
 results = instance_variable_get("@physicians")
self.class.name.split("::").last.gsub("Controller", "").downcase!
self.class.name.split("::").last.gsub("Controller", "")
self.class.name.split("::")
self.class.name
self.class
 results = instance_variable_get("@#{self.class.name.gsub("Controller", '').downcase!}")
continue
results = instance_variable_get("@#{self.class.gsub("Controller", '').downcase!}")
continue
instance_variable_get("@physicians")
continue
exception.message
next
continue
exception.message
next
name
continue
exception.message
next
speciality_id
next
location_id
next
continue
Location.for_select
location
locations
continue
reponse_body
response_body
continue
response_body
continue
response_body
continue
response.body[:messages]
response.body["messages"]
response.body["message"]
response.body.message
response.body.messages
response.body
response
continue
response.format
response.content_type
response.body
response
response.body
continue
help
continue
params[:filters][:by]
params[:filters]
params
continue
params[:filter][:speciality_id]
params[:filter]
params
prams
continue
params
continue
 params
continue
next
continue
ActiveSupport::JSON.decode(request.body.to_s)
ActiveSupport::JSON.decode(request.body)
ActiveSupport
whereami
request
request.body
